{"name": "test_send_message[user1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=120.0.6099.130)\nStacktrace:\n\tGetHandleVerifier [0x00FA6EE3+174339]\n\t(No symbol) [0x00ED0A51]\n\t(No symbol) [0x00BE6FF6]\n\t(No symbol) [0x00BCEFE7]\n\t(No symbol) [0x00C3B53B]\n\t(No symbol) [0x00C49E7B]\n\t(No symbol) [0x00C36DA6]\n\t(No symbol) [0x00C11034]\n\t(No symbol) [0x00C11F8D]\n\tGetHandleVerifier [0x01044B1C+820540]\n\tsqlite3_dbdata_init [0x011053EE+653550]\n\tsqlite3_dbdata_init [0x01104E09+652041]\n\tsqlite3_dbdata_init [0x010F97CC+605388]\n\tsqlite3_dbdata_init [0x01105D9B+656027]\n\t(No symbol) [0x00EDFE6C]\n\t(No symbol) [0x00ED83B8]\n\t(No symbol) [0x00ED84DD]\n\t(No symbol) [0x00EC5818]\n\tBaseThreadInitThunk [0x77A4FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]", "trace": "self = <test_user.ByteDance.page.main_page.MainPage object at 0x00000296C4EF4BD0>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000296C4F33880>, timeout = 10\n\n    def wait_ele(self, method, timeout=10):\n        # method 等待条件\n        try:\n>           ele = WebDriverWait(self.driver, timeout).until(method)\n\n..\\base\\base_page.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nelement = None, visibility = True\n\n    def _element_if_visible(element: WebElement, visibility: bool = True) -> Union[Literal[False], WebElement]:\n>       return element if element.is_displayed() == visibility else False\nE       AttributeError: 'NoneType' object has no attribute 'is_displayed'\n\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:179: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_user.ByteDance.testcases.test_case.TestCase object at 0x00000296C4EE7A50>, user = [13396541594, 'a1234567a', '1234567890', 'tester2']\n\n    @allure.story('联系人发送消息')\n    @allure.step('发送消息成功')\n    @pytest.mark.parametrize('user',datas)\n    def test_send_message(self,user):\n>       message = self.main.goto_login().login(user[0],user[1]).go_to_message().message_menu().user_info().send_message(user[2]).message_info()\n\ntest_case.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\main_page.py:37: in goto_login\n    self.wait_ele(expected_conditions.element_to_be_clickable(self.__DEMO))\n..\\base\\base_page.py:55: in wait_ele\n    self.screnn_image()\n..\\base\\base_page.py:102: in screnn_image\n    self.driver.save_screenshot(image_path)\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:829: in save_screenshot\n    return self.get_screenshot_as_file(filename)\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:805: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:839: in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:850: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000296C4F08DD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=120.0.6099.130)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00FA6EE3+174339]\nE       \t(No symbol) [0x00ED0A51]\nE       \t(No symbol) [0x00BE6FF6]\nE       \t(No symbol) [0x00BCEFE7]\nE       \t(No symbol) [0x00C3B53B]\nE       \t(No symbol) [0x00C49E7B]\nE       \t(No symbol) [0x00C36DA6]\nE       \t(No symbol) [0x00C11034]\nE       \t(No symbol) [0x00C11F8D]\nE       \tGetHandleVerifier [0x01044B1C+820540]\nE       \tsqlite3_dbdata_init [0x011053EE+653550]\nE       \tsqlite3_dbdata_init [0x01104E09+652041]\nE       \tsqlite3_dbdata_init [0x010F97CC+605388]\nE       \tsqlite3_dbdata_init [0x01105D9B+656027]\nE       \t(No symbol) [0x00EDFE6C]\nE       \t(No symbol) [0x00ED83B8]\nE       \t(No symbol) [0x00ED84DD]\nE       \t(No symbol) [0x00EC5818]\nE       \tBaseThreadInitThunk [0x77A4FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\n\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "steps": [{"name": "发送消息成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=120.0.6099.130)\nStacktrace:\n\tGetHandleVerifier [0x00FA6EE3+174339]\n\t(No symbol) [0x00ED0A51]\n\t(No symbol) [0x00BE6FF6]\n\t(No symbol) [0x00BCEFE7]\n\t(No symbol) [0x00C3B53B]\n\t(No symbol) [0x00C49E7B]\n\t(No symbol) [0x00C36DA6]\n\t(No symbol) [0x00C11034]\n\t(No symbol) [0x00C11F8D]\n\tGetHandleVerifier [0x01044B1C+820540]\n\tsqlite3_dbdata_init [0x011053EE+653550]\n\tsqlite3_dbdata_init [0x01104E09+652041]\n\tsqlite3_dbdata_init [0x010F97CC+605388]\n\tsqlite3_dbdata_init [0x01105D9B+656027]\n\t(No symbol) [0x00EDFE6C]\n\t(No symbol) [0x00ED83B8]\n\t(No symbol) [0x00ED84DD]\n\t(No symbol) [0x00EC5818]\n\tBaseThreadInitThunk [0x77A4FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\n\n", "trace": "  File \"D:\\test_user\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\test_user\\test_user\\ByteDance\\testcases\\test_case.py\", line 20, in test_send_message\n    message = self.main.goto_login().login(user[0],user[1]).go_to_message().message_menu().user_info().send_message(user[2]).message_info()\n              ^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\test_user\\test_user\\ByteDance\\page\\main_page.py\", line 37, in goto_login\n    self.wait_ele(expected_conditions.element_to_be_clickable(self.__DEMO))\n  File \"D:\\test_user\\test_user\\ByteDance\\base\\base_page.py\", line 55, in wait_ele\n    self.screnn_image()\n  File \"D:\\test_user\\test_user\\ByteDance\\base\\base_page.py\", line 102, in screnn_image\n    self.driver.save_screenshot(image_path)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 829, in save_screenshot\n    return self.get_screenshot_as_file(filename)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 805, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 839, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 850, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "打开飞书官网并跳转登录页面", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=120.0.6099.130)\nStacktrace:\n\tGetHandleVerifier [0x00FA6EE3+174339]\n\t(No symbol) [0x00ED0A51]\n\t(No symbol) [0x00BE6FF6]\n\t(No symbol) [0x00BCEFE7]\n\t(No symbol) [0x00C3B53B]\n\t(No symbol) [0x00C49E7B]\n\t(No symbol) [0x00C36DA6]\n\t(No symbol) [0x00C11034]\n\t(No symbol) [0x00C11F8D]\n\tGetHandleVerifier [0x01044B1C+820540]\n\tsqlite3_dbdata_init [0x011053EE+653550]\n\tsqlite3_dbdata_init [0x01104E09+652041]\n\tsqlite3_dbdata_init [0x010F97CC+605388]\n\tsqlite3_dbdata_init [0x01105D9B+656027]\n\t(No symbol) [0x00EDFE6C]\n\t(No symbol) [0x00ED83B8]\n\t(No symbol) [0x00ED84DD]\n\t(No symbol) [0x00EC5818]\n\tBaseThreadInitThunk [0x77A4FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\n\n", "trace": "  File \"D:\\test_user\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\test_user\\test_user\\ByteDance\\page\\main_page.py\", line 37, in goto_login\n    self.wait_ele(expected_conditions.element_to_be_clickable(self.__DEMO))\n  File \"D:\\test_user\\test_user\\ByteDance\\base\\base_page.py\", line 55, in wait_ele\n    self.screnn_image()\n  File \"D:\\test_user\\test_user\\ByteDance\\base\\base_page.py\", line 102, in screnn_image\n    self.driver.save_screenshot(image_path)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 829, in save_screenshot\n    return self.get_screenshot_as_file(filename)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 805, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 839, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 850, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "打开url=https://www.feishu.cn/", "status": "passed", "start": 1703170479208, "stop": 1703170482453}], "start": 1703170479208, "stop": 1703170485171}], "parameters": [{"name": "user", "value": "[13396541594, 'a1234567a', '1234567890', 'tester2']"}], "start": 1703170479208, "stop": 1703170485174}], "attachments": [{"name": "log", "source": "46eb3f76-9da8-4e68-806a-8ff28f44e311-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "69f28e7e-0294-4c47-a292-f88228e68d3c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "user", "value": "[13396541594, 'a1234567a', '1234567890', 'tester2']"}], "start": 1703170479208, "stop": 1703170485176, "uuid": "809ef919-aead-4424-98f4-79e76bba014c", "historyId": "3c06100a904aba801d4b6b0436ec0de2", "testCaseId": "05d2da3f0867b06657037629fe171259", "fullName": "test_case.TestCase#test_send_message", "labels": [{"name": "story", "value": "联系人发送消息"}, {"name": "feature", "value": "飞书 web 端发送消息"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "WIN-S0L97T4PR24"}, {"name": "thread", "value": "10704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case"}]}