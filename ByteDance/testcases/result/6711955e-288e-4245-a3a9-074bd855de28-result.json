{"name": "test_send_message[user0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path fill=\"#EFF0F1\" d=\"M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z\"></path> is not clickable at point (1197, 226). Other element would receive the click: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#9A6EF1\" viewBox=\"0 0 14 14\" height=\"13\" width=\"13\" class=\"hc_Svg hc_Svg--controlColor\" data-elem-id=\"bfDkmelK7d\" icon=\"<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 14 14&quot; height=&quot;14&quot; width=&quot;14&quot;><path fill=&quot;#EFF0F1&quot; d=&quot;M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z&quot;></path></svg>\" style=\"color: rgb(154, 110, 241);\">...</svg>\n  (Session info: chrome=120.0.6099.130)\nStacktrace:\n\tGetHandleVerifier [0x00FA6EE3+174339]\n\t(No symbol) [0x00ED0A51]\n\t(No symbol) [0x00BE6FF6]\n\t(No symbol) [0x00C1E48E]\n\t(No symbol) [0x00C1D09E]\n\t(No symbol) [0x00C1B5F8]\n\t(No symbol) [0x00C1AD7F]\n\t(No symbol) [0x00C12B4E]\n\t(No symbol) [0x00C3700C]\n\t(No symbol) [0x00C125B0]\n\t(No symbol) [0x00C37414]\n\t(No symbol) [0x00C4A104]\n\t(No symbol) [0x00C36DA6]\n\t(No symbol) [0x00C11034]\n\t(No symbol) [0x00C11F8D]\n\tGetHandleVerifier [0x01044B1C+820540]\n\tsqlite3_dbdata_init [0x011053EE+653550]\n\tsqlite3_dbdata_init [0x01104E09+652041]\n\tsqlite3_dbdata_init [0x010F97CC+605388]\n\tsqlite3_dbdata_init [0x01105D9B+656027]\n\t(No symbol) [0x00EDFE6C]\n\t(No symbol) [0x00ED83B8]\n\t(No symbol) [0x00ED84DD]\n\t(No symbol) [0x00EC5818]\n\tBaseThreadInitThunk [0x77A4FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]", "trace": "self = <test_user.ByteDance.testcases.test_case.TestCase object at 0x0000013885DE7F10>, user = [17722844353, 'a1234567a', '一', 'tester1']\n\n    @allure.story('联系人发送消息')\n    @allure.step('发送消息成功')\n    @pytest.mark.parametrize('user',datas)\n    def test_send_message(self,user):\n>       message = self.main.goto_login().login(user[0],user[1]).go_to_message().message_menu().user_info().send_message(user[2]).message_info()\n\ntest_case.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\main_page.py:41: in goto_login\n    self.find_ele(self.__DEMO_CLOSE).click()\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000013883619E90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path fill=\"#EFF0F1\" d=\"M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z\"></path> is not clickable at point (1197, 226). Other element would receive the click: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#9A6EF1\" viewBox=\"0 0 14 14\" height=\"13\" width=\"13\" class=\"hc_Svg hc_Svg--controlColor\" data-elem-id=\"bfDkmelK7d\" icon=\"<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 14 14&quot; height=&quot;14&quot; width=&quot;14&quot;><path fill=&quot;#EFF0F1&quot; d=&quot;M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z&quot;></path></svg>\" style=\"color: rgb(154, 110, 241);\">...</svg>\nE         (Session info: chrome=120.0.6099.130)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00FA6EE3+174339]\nE       \t(No symbol) [0x00ED0A51]\nE       \t(No symbol) [0x00BE6FF6]\nE       \t(No symbol) [0x00C1E48E]\nE       \t(No symbol) [0x00C1D09E]\nE       \t(No symbol) [0x00C1B5F8]\nE       \t(No symbol) [0x00C1AD7F]\nE       \t(No symbol) [0x00C12B4E]\nE       \t(No symbol) [0x00C3700C]\nE       \t(No symbol) [0x00C125B0]\nE       \t(No symbol) [0x00C37414]\nE       \t(No symbol) [0x00C4A104]\nE       \t(No symbol) [0x00C36DA6]\nE       \t(No symbol) [0x00C11034]\nE       \t(No symbol) [0x00C11F8D]\nE       \tGetHandleVerifier [0x01044B1C+820540]\nE       \tsqlite3_dbdata_init [0x011053EE+653550]\nE       \tsqlite3_dbdata_init [0x01104E09+652041]\nE       \tsqlite3_dbdata_init [0x010F97CC+605388]\nE       \tsqlite3_dbdata_init [0x01105D9B+656027]\nE       \t(No symbol) [0x00EDFE6C]\nE       \t(No symbol) [0x00ED83B8]\nE       \t(No symbol) [0x00ED84DD]\nE       \t(No symbol) [0x00EC5818]\nE       \tBaseThreadInitThunk [0x77A4FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\n\n..\\..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "发送消息成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path fill=\"#EFF0F1\" d=\"M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z\"></path> is not clickable at point (1197, 226). Other element would receive the click: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#9A6EF1\" viewBox=\"0 0 14 14\" height=\"13\" width=\"13\" class=\"hc_Svg hc_Svg--controlColor\" data-elem-id=\"bfDkmelK7d\" icon=\"<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 14 14&quot; height=&quot;14&quot; width=&quot;14&quot;><path fill=&quot;#EFF0F1&quot; d=&quot;M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z&quot;></path></svg>\" style=\"color: rgb(154, 110, 241);\">...</svg>\n  (Session info: chrome=120.0.6099.130)\nStacktrace:\n\tGetHandleVerifier [0x00FA6EE3+174339]\n\t(No symbol) [0x00ED0A51]\n\t(No symbol) [0x00BE6FF6]\n\t(No symbol) [0x00C1E48E]\n\t(No symbol) [0x00C1D09E]\n\t(No symbol) [0x00C1B5F8]\n\t(No symbol) [0x00C1AD7F]\n\t(No symbol) [0x00C12B4E]\n\t(No symbol) [0x00C3700C]\n\t(No symbol) [0x00C125B0]\n\t(No symbol) [0x00C37414]\n\t(No symbol) [0x00C4A104]\n\t(No symbol) [0x00C36DA6]\n\t(No symbol) [0x00C11034]\n\t(No symbol) [0x00C11F8D]\n\tGetHandleVerifier [0x01044B1C+820540]\n\tsqlite3_dbdata_init [0x011053EE+653550]\n\tsqlite3_dbdata_init [0x01104E09+652041]\n\tsqlite3_dbdata_init [0x010F97CC+605388]\n\tsqlite3_dbdata_init [0x01105D9B+656027]\n\t(No symbol) [0x00EDFE6C]\n\t(No symbol) [0x00ED83B8]\n\t(No symbol) [0x00ED84DD]\n\t(No symbol) [0x00EC5818]\n\tBaseThreadInitThunk [0x77A4FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\n\n", "trace": "  File \"D:\\test_user\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\test_user\\test_user\\ByteDance\\testcases\\test_case.py\", line 20, in test_send_message\n    message = self.main.goto_login().login(user[0],user[1]).go_to_message().message_menu().user_info().send_message(user[2]).message_info()\n              ^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\test_user\\test_user\\ByteDance\\page\\main_page.py\", line 41, in goto_login\n    self.find_ele(self.__DEMO_CLOSE).click()\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "打开飞书官网并跳转登录页面", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <path fill=\"#EFF0F1\" d=\"M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z\"></path> is not clickable at point (1197, 226). Other element would receive the click: <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#9A6EF1\" viewBox=\"0 0 14 14\" height=\"13\" width=\"13\" class=\"hc_Svg hc_Svg--controlColor\" data-elem-id=\"bfDkmelK7d\" icon=\"<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; fill=&quot;none&quot; viewBox=&quot;0 0 14 14&quot; height=&quot;14&quot; width=&quot;14&quot;><path fill=&quot;#EFF0F1&quot; d=&quot;M0.635666 0.636033C0.245142 1.02656 0.245143 1.65972 0.635667 2.05025L5.58548 7.00006L0.635772 11.9498C0.245247 12.3403 0.245247 12.9735 0.635772 13.364C1.0263 13.7545 1.65946 13.7545 2.04999 13.364L6.99969 8.41427L11.9494 13.364C12.3399 13.7545 12.9731 13.7545 13.3636 13.364C13.7541 12.9734 13.7541 12.3403 13.3636 11.9497L8.41391 7.00006L13.3637 2.05028C13.7542 1.65975 13.7542 1.02659 13.3637 0.636062C12.9732 0.245538 12.34 0.245538 11.9495 0.636062L6.99969 5.58585L2.04988 0.636033C1.65936 0.245509 1.02619 0.245509 0.635666 0.636033Z&quot;></path></svg>\" style=\"color: rgb(154, 110, 241);\">...</svg>\n  (Session info: chrome=120.0.6099.130)\nStacktrace:\n\tGetHandleVerifier [0x00FA6EE3+174339]\n\t(No symbol) [0x00ED0A51]\n\t(No symbol) [0x00BE6FF6]\n\t(No symbol) [0x00C1E48E]\n\t(No symbol) [0x00C1D09E]\n\t(No symbol) [0x00C1B5F8]\n\t(No symbol) [0x00C1AD7F]\n\t(No symbol) [0x00C12B4E]\n\t(No symbol) [0x00C3700C]\n\t(No symbol) [0x00C125B0]\n\t(No symbol) [0x00C37414]\n\t(No symbol) [0x00C4A104]\n\t(No symbol) [0x00C36DA6]\n\t(No symbol) [0x00C11034]\n\t(No symbol) [0x00C11F8D]\n\tGetHandleVerifier [0x01044B1C+820540]\n\tsqlite3_dbdata_init [0x011053EE+653550]\n\tsqlite3_dbdata_init [0x01104E09+652041]\n\tsqlite3_dbdata_init [0x010F97CC+605388]\n\tsqlite3_dbdata_init [0x01105D9B+656027]\n\t(No symbol) [0x00EDFE6C]\n\t(No symbol) [0x00ED83B8]\n\t(No symbol) [0x00ED84DD]\n\t(No symbol) [0x00EC5818]\n\tBaseThreadInitThunk [0x77A4FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D97C3E+238]\n\n", "trace": "  File \"D:\\test_user\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\test_user\\test_user\\ByteDance\\page\\main_page.py\", line 41, in goto_login\n    self.find_ele(self.__DEMO_CLOSE).click()\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\test_user\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "打开url=https://www.feishu.cn/", "status": "passed", "start": 1703171084714, "stop": 1703171084863}], "start": 1703171084714, "stop": 1703171090332}], "parameters": [{"name": "user", "value": "[17722844353, 'a1234567a', '一', 'tester1']"}], "start": 1703171084714, "stop": 1703171090332}], "attachments": [{"name": "log", "source": "760dbe95-c4e4-4dbf-95fb-f0141493016c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "55b28921-0cb4-4ee0-97d2-0c3bf8a7fe03-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "user", "value": "[17722844353, 'a1234567a', '一', 'tester1']"}], "start": 1703171084714, "stop": 1703171090332, "uuid": "c35a4350-9e1f-4769-b6be-576d7d1d89c1", "historyId": "c485e5fa2ebba26ff1e08bc721eaea71", "testCaseId": "05d2da3f0867b06657037629fe171259", "fullName": "test_case.TestCase#test_send_message", "labels": [{"name": "story", "value": "联系人发送消息"}, {"name": "feature", "value": "飞书 web 端发送消息"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "WIN-S0L97T4PR24"}, {"name": "thread", "value": "8072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case"}]}